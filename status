#!/bin/bash
# Adam Cockell
# 7/9/14
# Script to send custom email reports to various recipients

username=$1
pass=$2

rm -rf epics
rm -rf epic_tickets
rm -rf epic_count

echo "---------------"
echo "Finding Epics: "
curl  -H "Content-Type: application/json; charset=UTF-8" -u $username:$pass "https://radiumone.jira.com/rest/api/2/search?jql=project="Datatech"%20AND%20issuetype="Epic"%20AND%20labels=DWPM&maxResults=1000" > epic_response
epic_count=$(cat epic_response | jsawk -n 'out(this.issues)' | jsawk -a 'return this.length')
echo $epic_count epics

echo "-------------------"
echo "Finding Non-epics in Sprint: "
curl  -H "Content-Type: application/json; charset=UTF-8" -u $username:$pass "https://radiumone.jira.com/rest/api/2/search?jql=project="Datatech"%20AND%20issuetype!="Epic"%20AND%20labels=DWPM%20AND%20sprint=125+order+by+priority&maxResults=1000" > sprint_response
other_count=$(cat sprint_response | jsawk -n 'out(this.issues)' | jsawk -a 'return this.length')
echo $other_count issues

echo "------------------"
echo "Finding non-epics outside of Sprint: "
curl  -H "Content-Type: application/json; charset=UTF-8" -u $username:$pass "https://radiumone.jira.com/rest/api/2/search?jql=project="Datatech"%20AND%20issuetype!="Epic"%20AND%20labels=DWPM+order+by+priority&maxResults=1000" > all_response
all_count=$(cat all_response | jsawk -n 'out(this.issues)' | jsawk -a 'return this.length')
echo $all_count

echo "-----"
echo "Epics"
issue=()
field=()
for (( cnt=0; cnt<$epic_count; cnt++ ))
do
  interested_in=$(cat epic_response | jsawk -n "out(this.issues[$cnt])")
  epic[cnt]=$(echo $interested_in | jsawk -n "out(this.key)")
  field[cnt]=$(echo $interested_in | jsawk -n "out(this.fields.summary)")
  echo "${epic[cnt]} | ${field[cnt]}" >> epics
done

echo "-----------------------"
echo "Finding Tickets in Epics for sprint"

for (( cnt=0; cnt<$other_count; cnt++ ))
do

  interested_in=$(cat sprint_response | jsawk -n "out(this.issues[$cnt])")
  issue_in_epic_epic_key=$(echo $interested_in | jsawk -n "out(this.fields.customfield_10910)")

  if [ $issue_in_epic_epic_key != "null" ]; then
    issue_in_epic_summary=$(echo $interested_in | jsawk -n "out(this.fields.summary)")
    issue_in_epic_key=$(echo $interested_in | jsawk -n "out(this.key)")
    issue_in_epic_status=$(echo $interested_in | jsawk -n "out(this.fields.status.name)")
    echo "$issue_in_epic_epic_key | $issue_in_epic_key |  $issue_in_epic_summary |  $issue_in_epic_status" >> epic_tickets
  fi
done

echo "-----------------------"
echo "Finding Tickets in Epics overall"

for (( cnt=0; cnt<$all_count; cnt++ ))
do
  issue_in_epic_epic_key=$(cat all_response | jsawk -n "out(this.issues[$cnt].fields.customfield_10910)")
  if [ $issue_in_epic_epic_key != "null" ]; then
    echo $issue_in_epic_epic_key >> epic_count
  fi
done

sorted_epic_values=($(sort epic_count | uniq -c | awk '{ print $1 }'))
sorted_epic_keys=($(sort epic_count | uniq -c | awk '{ print $2 }'))
sorted_epic_summaries=()

for (( cnt=0; cnt<$epic_count; cnt++ ))
do
  for (( cntb=0; cntb<$epic_count; cntb++ ))
  do
      line=($(cat epics | awk "NR==$cntb" | cut -d'|' -f 1 ))
      if [ "$line" == "${sorted_epic_keys[cnt]}" ]; then
        #echo "matched ${sorted_epic_keys[cnt]} and $line"
        sorted_epic_summaries[cnt]=$(cat epics | awk "NR==$cntb" | cut -d'|' -f 2 )
      fi
  done
done

echo ""
echo "Data Technology epics and progress during the current sprint"

for (( cnt=0; cnt<$epic_count; cnt++ ))
do
  
  if [ "${sorted_epic_summaries[cnt]}" ]; then
    echo "${sorted_epic_keys[cnt]}: ${sorted_epic_summaries[cnt]} (${sorted_epic_values[cnt]} issues total)"
  fi

  for (( cntb=0; cntb<$other_count; cntb++ ))
  do

    line=($(cat epic_tickets | awk "NR==$cntb" | cut -d'|' -f 1 ))
    if [[ "$line" == "${sorted_epic_keys[cnt]}" && "$line" != "" ]]; then
      task=$(cat epic_tickets | awk "NR==$cntb" | cut -d'|' -f 2 )
      summary=$(cat epic_tickets | awk "NR==$cntb" | cut -d'|' -f 3 )
      progress=$(cat epic_tickets | awk "NR==$cntb" | cut -d'|' -f 4 )
      echo "$task [ $progress ]  $summary"
    fi
  done
  echo ""
done
